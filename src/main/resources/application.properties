spring.application.name=gym-services
server.port=8090



spring.cloud.stream.default-binder=kafka
spring.kafka.bootstrap-servers=localhost:29091

# Database
spring.datasource.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.datasource.url=jdbc:mysql://localhost:3306/fitnessCenterDB?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=L@E9p[Kc=~Ev2tQ+
spring.jpa.hibernate.ddl-auto=update

# File upload
file.upload-dir=C:/uploads
file.app-dir=gym-services/logos
file.url-prefix=/uploads

#file.upload-dir=/var/uploads
#file.app-dir=vipgym-services/logos
#file.url-prefix=/uploads

# App url
app.base-url=http://localhost:8090

# React js front end URL
cors.allowedOrigins=http://localhost:5173


# JWT Configuration
app.jwt.secret=FayBuLd0DIowIc3tip1c6Qua8YtdeIk95uFT6csG3so=
app.jwt.expirationMs=86400000
app.jwt.refreshExpirationMs=2592000000

easysms.api.url=https://apisms.beem.africa/v1/send
easysms.api.balance.url=https://apisms.beem.africa/public/v1/vendors/balance
easysms.api.key=
easysms.api.secret=
easysms.api.senderid=4Js FITNESS
# Cron schedules (configurable)
# Every 5 minutes
sms.cron.payment=0 */5 * * * *
# Daily at 8 AM
sms.cron.expiry=0 0 8 * * *
# Daily at 9 AM
sms.cron.partial=0 0 9 * * *
# Every hour on the hour.
sms.scheduler.cron=0 0 * * * *

# Swagger Configuration for v2.x
# http://localhost:8090/swagger-ui/index.html
# Basic Configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=alpha

# Customize UI
springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.validator-url=

# Enable search bar and filtering
springdoc.swagger-ui.layout=StandaloneLayout
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.deepLinking=true


spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8


# Limit noisy Spring Framework logs
#logging.level.org.springframework=INFO
logging.level.org.hibernate=ERROR
logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework.boot.autoconfigure=INFO
logging.level.org.springframework.cloud=INFO
logging.level.org.apache.kafka=ERROR
logging.level.com.jerrycode.gym_services=DEBUG

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
storage.path=${user.dir}/src/main/resources/static/

# Static resources configuration
#spring.web.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:./uploads/


server.tomcat.threads.max=500
server.tomcat.threads.min-spare=50
server.tomcat.max-connections=20000
server.tomcat.connection-timeout=30000




